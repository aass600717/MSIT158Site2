@{
    ViewData["Title"] = "Spots";
}

<h1>台北市景點</h1>
<div class="row mb-3">
    <div class="col-3"></div>
    <div class="col-6">
        <nav>
            <ul class="pagination" id="ul1">
            </ul>
        </nav>
    </div>
    <div class="col-3">
        <input type="search" placeholder="搜尋景點資料" class="form-control" id="inputSearch" />
    </div>
</div>
<div class="row row-cols-1 row-cols-md-3 g-4" id="div1">
</div>


@section Styles {
    <style>
        

    </style>
}
@section Scripts {
    <script>
        // DOM 元素選取
        const divSpots = document.querySelector('#div1');
        const ulPaging = document.querySelector('#ul1');
        const inpSearch = document.querySelector('#inputSearch');

        // 搜尋參數初始設置
        const searchData = {
            "categoryId": 0,
            "keyword": "公園",
            "page": 1,
            "pageSize": 9,
            "sortBy": "SpotId",
            "sortType": "asc"
        };

        // 分頁處理函數
        const pagingHandler = page => {
            searchData.page = page; // 更新當前頁數
            loadSpots(); // 重新加載景點資料
        };
        // 加載景點資料的異步函數
        const loadSpots = async () => {
            const url = 'https://localhost:7204/api/Spots'; // API 端點

            // 發送 POST 請求到服務端
            const response = await fetch(url, {
                method: 'POST',
                body: JSON.stringify(searchData),
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            const data = await response.json(); // 解析 JSON 數據
            console.log(data); // 輸出資料到控制台

            // 生成景點卡片的 HTML 內容並顯示
            const spots = data.spotsResult.map(spot => {
                const { spotId, spotTitle, spotDescription, address, spotImage } = spot;
                return (`
                    <div class="col">
                        <div class="card">
                            <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                            <div class="card-body">
                                <h5 class="card-title">${spotId} ${spotTitle}</h5>
                                <p class="card-text">${spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100)}</p>
                            </div>
                            <div class="card-footer">
                              <small class="text-body-secondary">${address}</small>
                            </div>
                        </div>
                    </div>
                `);
            });
            divSpots.innerHTML = spots.join(""); // 將景點卡片的 HTML 插入到頁面

            // 生成分頁按鈕並顯示
            let liPages = "";
            for (let i = 1, max = data.totalPages; i <= max; i++) {
                liPages += `<li class="page-item" onclick="pagingHandler(${i})"><a class="page-link">${i}</a></li>`;
            }
            ulPaging.innerHTML = liPages;
        };

        // 加載景點資料
        loadSpots();

        // 搜尋欄鍵盤事件監聽，當按下 Enter 鍵時更新關鍵字並重新加載景點
        inpSearch.addEventListener('keydown', event => {
            if (event.keyCode === 13) { // 判斷是否為 Enter 鍵
                searchData.keyword = event.target.value; // 更新搜索關鍵字
                loadSpots(); // 重新加載景點
            }
        });

    </script>
}